name: Build GTK3 with Ayatana

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Setup dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            ninja-build meson build-essential \
            pkg-config python3-dev python3-pip \
            libffi-dev libmount-dev libzstd-dev \
            gettext itstool libxml2-dev \
            gobject-introspection libgirepository1.0-dev

          mkdir -p $HOME/deps

          echo "PKG_CONFIG_PATH=$HOME/deps/lib/pkgconfig:$HOME/deps/share/pkgconfig:$PKG_CONFIG_PATH" >> $GITHUB_ENV
          echo "LD_LIBRARY_PATH=$HOME/deps/lib:$LD_LIBRARY_PATH" >> $GITHUB_ENV
          echo "PATH=$HOME/deps/bin:$PATH" >> $GITHUB_ENV

      - name: Build OpenSSL
        run: |
          curl -LO https://www.openssl.org/source/openssl-3.3.1.tar.gz
          tar xf openssl-3.3.1.tar.gz
          cd openssl-3.3.1
          ./config --prefix=$HOME/deps --openssldir=$HOME/deps/ssl
          make -j$(nproc)
          make install_sw
          cd ..

      - name: Build glib
        run: |
          git clone https://gitlab.gnome.org/GNOME/glib.git --branch 2.82.2 --depth=1
          cd glib
          meson setup builddir --prefix=$HOME/deps --buildtype=release -Dlibmount=enabled -Dtests=false
          ninja -C builddir
          ninja -C builddir install
          cd ..

      - name: Build pango
        run: |
          git clone https://gitlab.gnome.org/GNOME/pango.git --branch 1.54.0 --depth=1
          cd pango
          meson setup builddir --prefix=$HOME/deps --buildtype=release -Dtests=false
          ninja -C builddir
          ninja -C builddir install
          cd ..

      - name: Build atk
        run: |
          git clone https://gitlab.gnome.org/GNOME/atk.git --branch master --depth=1
          cd atk
          meson setup builddir --prefix=$HOME/deps --buildtype=release -Dintrospection=enabled -Ddocs=false -Dtests=false
          ninja -C builddir
          ninja -C builddir install
          cd ..

      - name: Build gdk-pixbuf
        run: |
          git clone https://gitlab.gnome.org/GNOME/gdk-pixbuf.git --branch 2.42.12 --depth=1
          cd gdk-pixbuf
          meson setup builddir --prefix=$HOME/deps --buildtype=release -Dtests=false
          ninja -C builddir
          ninja -C builddir install
          cd ..

      - name: Build gtk3
        run: |
          git clone https://gitlab.gnome.org/GNOME/gtk.git --branch gtk-3-24 --depth=1
          cd gtk
          meson setup builddir --prefix=$HOME/deps --buildtype=release \
            -Dintrospection=enabled -Ddemos=false -Dexamples=false -Dtests=false
          ninja -C builddir
          ninja -C builddir install
          cd ..

      - name: Build libayatana-ido
        run: |
          git clone https://github.com/AyatanaIndicators/libayatana-ido.git --branch 0.9.3 --depth=1
          cd libayatana-ido
          meson setup builddir --prefix=$HOME/deps --buildtype=release -Dtests=false
          ninja -C builddir
          ninja -C builddir install
          cd ..

      - name: Build libayatana-appindicator
        run: |
          git clone https://github.com/AyatanaIndicators/libayatana-appindicator.git --branch 0.5.93 --depth=1
          cd libayatana-appindicator
          meson setup builddir --prefix=$HOME/deps --buildtype=release \
            -Dgtk_doc=false -Dtests=false
          ninja -C builddir
          ninja -C builddir install
          cd ..

      - name: Package artifacts
        run: |
          tar czf gtk3-ayatana.tar.gz -C $HOME deps
          mkdir -p artifacts
          mv gtk3-ayatana.tar.gz artifacts/

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: gtk3-ayatana
          path: artifacts/gtk3-ayatana.tar.gz
