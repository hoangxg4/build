name: Build Portable GNOME + Libs (Stable Master ATK)

on:
  workflow_dispatch:
  push:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-22.04
    env:
      PREFIX: ${{ github.workspace }}/portable

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install tools
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential meson ninja-build cmake pkg-config \
                                  python3-pip wget curl xz-utils git
          pip install --upgrade meson

      - name: Prepare prefix
        run: mkdir -p $PREFIX

      # === GLib ===
      - name: Build GLib
        run: |
          wget https://download.gnome.org/sources/glib/2.82/glib-2.82.1.tar.xz
          tar xf glib-2.82.1.tar.xz
          cd glib-2.82.1
          meson setup builddir --prefix=$PREFIX --buildtype=release
          ninja -C builddir
          ninja -C builddir install

      - name: Setup env
        run: |
          echo "PKG_CONFIG_PATH=$PREFIX/lib/pkgconfig:$PREFIX/share/pkgconfig" >> $GITHUB_ENV
          echo "LD_LIBRARY_PATH=$PREFIX/lib" >> $GITHUB_ENV
          echo "PATH=$PREFIX/bin:$PATH" >> $GITHUB_ENV

      # === Pango ===
      - name: Build Pango
        run: |
          git clone https://gitlab.gnome.org/GNOME/pango.git --depth=1 --branch main
          cd pango
          meson setup builddir --prefix=$PREFIX --buildtype=release
          ninja -C builddir
          ninja -C builddir install

      # === ATK (master) ===
      - name: Build ATK
        run: |
          git clone https://gitlab.gnome.org/GNOME/atk.git --branch master --depth=1
          cd atk
          meson setup builddir --prefix=$PREFIX --buildtype=release -Dintrospection=false
          ninja -C builddir
          ninja -C builddir install

      # === GTK3 ===
      - name: Build GTK3
        run: |
          git clone https://gitlab.gnome.org/GNOME/gtk.git --branch gtk-3-24 --depth=1
          cd gtk
          meson setup builddir --prefix=$PREFIX --buildtype=release -Dbuild-tests=false -Dintrospection=false
          ninja -C builddir
          ninja -C builddir install

      # === OpenSSL ===
      - name: Build OpenSSL
        run: |
          wget https://www.openssl.org/source/openssl-3.3.1.tar.gz
          tar xf openssl-3.3.1.tar.gz
          cd openssl-3.3.1
          ./config --prefix=$PREFIX --openssldir=$PREFIX/ssl no-shared
          make -j$(nproc)
          make install_sw

      # === libayatana-appindicator ===
      - name: Build libayatana-appindicator
        run: |
          git clone https://github.com/AyatanaIndicators/libayatana-appindicator.git --depth=1
          cd libayatana-appindicator
          mkdir build && cd build
          cmake .. -DCMAKE_INSTALL_PREFIX=$PREFIX -DCMAKE_BUILD_TYPE=Release
          make -j$(nproc)
          make install

      # === Package ===
      - name: Package portable bundle
        run: |
          cd $PREFIX
          tar czf ${{ github.workspace }}/portable-libs.tar.gz *

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: portable-libs
          path: portable-libs.tar.gz
